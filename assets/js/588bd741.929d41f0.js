"use strict";(self.webpackChunkaudio_queue_docs=self.webpackChunkaudio_queue_docs||[]).push([[324],{3014:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"getting-started/quick-start","title":"Quick Start","description":"Get up and running with audio-channel-queue in 5 minutes","source":"@site/docs/getting-started/quick-start.md","sourceDirName":"getting-started","slug":"/getting-started/quick-start","permalink":"/audio-queue-docs/getting-started/quick-start","draft":false,"unlisted":false,"editUrl":"https://github.com/tonycarpenter21/audio-queue-docs/tree/main/docs/getting-started/quick-start.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Quick Start","description":"Get up and running with audio-channel-queue in 5 minutes"},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/audio-queue-docs/getting-started/installation"},"next":{"title":"Basic Usage Examples","permalink":"/audio-queue-docs/getting-started/basic-usage"}}');var o=r(4848),t=r(8453);const s={sidebar_position:2,title:"Quick Start",description:"Get up and running with audio-channel-queue in 5 minutes"},a="\ud83d\ude80 Quick Start Guide",l={},u=[{value:"\ud83d\udccb What We&#39;ll Build",id:"-what-well-build",level:2},{value:"\ud83c\udfb5 Step 1: Basic Audio Playback",id:"-step-1-basic-audio-playback",level:2},{value:"\ud83c\udf9b\ufe0f Step 2: Multiple Channels",id:"\ufe0f-step-2-multiple-channels",level:2},{value:"\u23ef\ufe0f Step 3: Add Pause/Resume Controls",id:"\ufe0f-step-3-add-pauseresume-controls",level:2},{value:"\ud83d\udd0a Step 4: Volume Control",id:"-step-4-volume-control",level:2},{value:"\ud83d\udcca Step 5: Real-time Event Monitoring",id:"-step-5-real-time-event-monitoring",level:2},{value:"\ud83d\udea8 Step 6: Priority Audio &amp; Queue Management",id:"-step-6-priority-audio--queue-management",level:2},{value:"\ud83c\udfae Complete Example: Simple Game Audio",id:"-complete-example-simple-game-audio",level:2},{value:"\ud83c\udfaf What&#39;s Next?",id:"-whats-next",level:2},{value:"\ud83d\udcda <strong>Core Concepts</strong>",id:"-core-concepts",level:3},{value:"\ud83d\udcd6 <strong>API Reference</strong>",id:"-api-reference",level:3},{value:"\ud83c\udfaf <strong>Examples</strong>",id:"-examples",level:3},{value:"\ud83d\udd25 <strong>Advanced Features</strong>",id:"-advanced-features",level:3},{value:"\ud83d\udca1 Quick Tips",id:"-quick-tips",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"-quick-start-guide",children:"\ud83d\ude80 Quick Start Guide"})}),"\n",(0,o.jsxs)(n.p,{children:["Get up and running with Audio Channel Queue in just ",(0,o.jsx)(n.strong,{children:"5 minutes"}),"! This guide will walk you through creating your first multi-channel audio application."]}),"\n",(0,o.jsx)(n.h2,{id:"-what-well-build",children:"\ud83d\udccb What We'll Build"}),"\n",(0,o.jsx)(n.p,{children:"By the end of this guide, you'll have:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"\u2705 Background music playing on channel 0"}),"\n",(0,o.jsx)(n.li,{children:"\u2705 Sound effects playing on channel 1"}),"\n",(0,o.jsx)(n.li,{children:"\u2705 Volume controls for each channel"}),"\n",(0,o.jsx)(n.li,{children:"\u2705 Pause/resume functionality"}),"\n",(0,o.jsx)(n.li,{children:"\u2705 Event listeners showing real-time feedback"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"-step-1-basic-audio-playback",children:"\ud83c\udfb5 Step 1: Basic Audio Playback"}),"\n",(0,o.jsx)(n.p,{children:"Let's start with the simplest possible example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { queueAudio } from 'audio-channel-queue';\r\n\r\n// Play a sound immediately\r\nawait queueAudio('./sounds/welcome.mp3');\r\n\r\nconsole.log('Audio is now playing!');\n"})}),"\n",(0,o.jsx)(n.p,{children:"That's it! Your first audio is playing. But let's make it more interesting..."}),"\n",(0,o.jsx)(n.h2,{id:"\ufe0f-step-2-multiple-channels",children:"\ud83c\udf9b\ufe0f Step 2: Multiple Channels"}),"\n",(0,o.jsx)(n.p,{children:"Now let's use multiple channels to play different types of audio simultaneously:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { queueAudio, setChannelVolume } from 'audio-channel-queue';\r\n\r\n// Background music on channel 0 (quieter)\r\nawait queueAudio('./music/background.mp3', 0, { \r\n  loop: true,    // Loop continuously\r\n  volume: 0.3    // 30% volume\r\n});\r\n\r\n// Sound effects on channel 1 (louder)\r\nawait queueAudio('./sfx/button-click.wav', 1, {\r\n  volume: 0.8    // 80% volume\r\n});\r\n\r\nconsole.log('Background music and sound effects playing!');\n"})}),"\n",(0,o.jsx)(n.h2,{id:"\ufe0f-step-3-add-pauseresume-controls",children:"\u23ef\ufe0f Step 3: Add Pause/Resume Controls"}),"\n",(0,o.jsx)(n.p,{children:"Let's add some control over our audio:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { \r\n  queueAudio, \r\n  pauseChannel, \r\n  resumeChannel, \r\n  pauseAllChannels,\r\n  resumeAllChannels\r\n} from 'audio-channel-queue';\r\n\r\n// Start some audio\r\nawait queueAudio('./music/background.mp3', 0, { loop: true });\r\nawait queueAudio('./sfx/explosion.wav', 1);\r\n\r\n// Pause just the background music\r\nawait pauseChannel(0);\r\nconsole.log('Background music paused');\r\n\r\n// Resume it after 2 seconds\r\nsetTimeout(async () => {\r\n  await resumeChannel(0);\r\n  console.log('Background music resumed');\r\n}, 2000);\r\n\r\n// Emergency pause - stop everything!\r\n// await pauseAllChannels();\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-step-4-volume-control",children:"\ud83d\udd0a Step 4: Volume Control"}),"\n",(0,o.jsx)(n.p,{children:"Control the volume of individual channels or all channels at once:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { setChannelVolume, setAllChannelsVolume, getChannelVolume } from 'audio-channel-queue';\r\n\r\n// Set individual channel volumes\r\nsetChannelVolume(0, 0.2);  // Background music: 20%\r\nsetChannelVolume(1, 0.9);  // Sound effects: 90%\r\n\r\n// Check current volume\r\nconst bgVolume = getChannelVolume(0);\r\nconsole.log(`Background volume: ${bgVolume * 100}%`);\r\n\r\n// Set all channels to the same volume\r\nsetAllChannelsVolume(0.5);  // All channels: 50%\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-step-5-real-time-event-monitoring",children:"\ud83d\udcca Step 5: Real-time Event Monitoring"}),"\n",(0,o.jsx)(n.p,{children:"Get real-time feedback about what's happening:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { \r\n  queueAudio,\r\n  onAudioStart,\r\n  onAudioComplete,\r\n  onAudioProgress,\r\n  onQueueChange\r\n} from 'audio-channel-queue';\r\n\r\n// Listen for when audio starts playing\r\nonAudioStart(0, (info) => {\r\n  console.log(`\ud83c\udfb5 Started: ${info.fileName}`);\r\n  console.log(`\u23f1\ufe0f  Duration: ${(info.duration / 1000).toFixed(1)}s`);\r\n});\r\n\r\n// Listen for when audio finishes\r\nonAudioComplete(0, (info) => {\r\n  console.log(`\u2705 Completed: ${info.fileName}`);\r\n  console.log(`\ud83d\udcca Remaining in queue: ${info.remainingInQueue}`);\r\n});\r\n\r\n// Listen for real-time progress updates\r\nonAudioProgress(0, (info) => {\r\n  const progressPercent = (info.progress * 100).toFixed(1);\r\n  console.log(`\ud83d\udcc8 Progress: ${progressPercent}%`);\r\n});\r\n\r\n// Listen for queue changes\r\nonQueueChange(0, (snapshot) => {\r\n  console.log(`\ud83d\udccb Queue has ${snapshot.totalItems} items`);\r\n});\r\n\r\n// Now start some audio to see the events in action\r\nawait queueAudio('./music/song.mp3', 0);\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-step-6-priority-audio--queue-management",children:"\ud83d\udea8 Step 6: Priority Audio & Queue Management"}),"\n",(0,o.jsx)(n.p,{children:"Handle urgent audio that needs to play immediately:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { \r\n  queueAudio,\r\n  queueAudioPriority,\r\n  stopCurrentAudioInChannel,\r\n  stopAllAudioInChannel\r\n} from 'audio-channel-queue';\r\n\r\n// Queue up some background music\r\nawait queueAudio('./music/song1.mp3', 0);\r\nawait queueAudio('./music/song2.mp3', 0);\r\nawait queueAudio('./music/song3.mp3', 0);\r\n\r\n// Urgent announcement - play next!\r\nawait queueAudioPriority('./voice/important-announcement.mp3', 0);\r\n\r\n// Stop current song and skip to next\r\nstopCurrentAudioInChannel(0);\r\n\r\n// Clear entire queue for emergency\r\n// stopAllAudioInChannel(0);\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-complete-example-simple-game-audio",children:"\ud83c\udfae Complete Example: Simple Game Audio"}),"\n",(0,o.jsx)(n.p,{children:"Here's a complete example showing how you might use Audio Channel Queue in a simple game:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { \r\n  queueAudio,\r\n  queueAudioPriority,\r\n  setChannelVolume,\r\n  setVolumeDucking,\r\n  pauseAllChannels,\r\n  resumeAllChannels,\r\n  onAudioStart\r\n} from 'audio-channel-queue';\r\n\r\nclass GameAudio {\r\n  constructor() {\r\n    // Set up volume levels\r\n    setChannelVolume(0, 0.4);  // Background music\r\n    setChannelVolume(1, 0.8);  // Sound effects  \r\n    setChannelVolume(2, 1.0);  // Voice/announcements\r\n\r\n    // Set up volume ducking - when voice plays, reduce other audio\r\n    setVolumeDucking({\r\n      priorityChannel: 2,      // Voice channel\r\n      priorityVolume: 1.0,     // Voice at full volume\r\n      duckingVolume: 0.1       // Reduce others to 10%\r\n    });\r\n\r\n    // Log when important audio starts\r\n    onAudioStart(2, (info) => {\r\n      console.log(`\ud83c\udf99\ufe0f Voice announcement: ${info.fileName}`);\r\n    });\r\n  }\r\n\r\n  async startGame() {\r\n    // Start background music\r\n    await queueAudio('./music/game-theme.mp3', 0, { loop: true });\r\n    console.log('\ud83c\udfae Game started!');\r\n  }\r\n\r\n  async playerJump() {\r\n    // Quick sound effect\r\n    await queueAudio('./sfx/jump.wav', 1);\r\n  }\r\n\r\n  async playerExplode() {\r\n    // Explosion sound\r\n    await queueAudio('./sfx/explosion.wav', 1);\r\n  }\r\n\r\n  async gameOver() {\r\n    // Priority announcement (will duck background music)\r\n    await queueAudioPriority('./voice/game-over.mp3', 2);\r\n  }\r\n\r\n  async pauseGame() {\r\n    await pauseAllChannels();\r\n    console.log('\u23f8\ufe0f Game paused');\r\n  }\r\n\r\n  async resumeGame() {\r\n    await resumeAllChannels();\r\n    console.log('\u25b6\ufe0f Game resumed');\r\n  }\r\n}\r\n\r\n// Use it in your game\r\nconst gameAudio = new GameAudio();\r\n\r\n// Start the game\r\nawait gameAudio.startGame();\r\n\r\n// Simulate some game events\r\nsetTimeout(() => gameAudio.playerJump(), 1000);\r\nsetTimeout(() => gameAudio.playerExplode(), 2000);\r\nsetTimeout(() => gameAudio.gameOver(), 3000);\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-whats-next",children:"\ud83c\udfaf What's Next?"}),"\n",(0,o.jsx)(n.p,{children:"Congratulations! You now have a solid foundation with Audio Channel Queue. Here's what to explore next:"}),"\n",(0,o.jsxs)(n.h3,{id:"-core-concepts",children:["\ud83d\udcda ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"../core-concepts/audio-channels",children:"Core Concepts"})})]}),"\n",(0,o.jsx)(n.p,{children:"Understand how channels, queues, and the audio lifecycle work"}),"\n",(0,o.jsxs)(n.h3,{id:"-api-reference",children:["\ud83d\udcd6 ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"../api-reference/queue-management",children:"API Reference"})})]}),"\n",(0,o.jsx)(n.p,{children:"Complete documentation of all available functions"}),"\n",(0,o.jsxs)(n.h3,{id:"-examples",children:["\ud83c\udfaf ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"../getting-started/basic-usage",children:"Examples"})})]}),"\n",(0,o.jsx)(n.p,{children:"Real-world examples for gaming, podcasts, and interactive apps"}),"\n",(0,o.jsxs)(n.h3,{id:"-advanced-features",children:["\ud83d\udd25 ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"../advanced/volume-ducking",children:"Advanced Features"})})]}),"\n",(0,o.jsx)(n.p,{children:"Volume ducking, priority queuing, and progress tracking"}),"\n",(0,o.jsx)(n.h2,{id:"-quick-tips",children:"\ud83d\udca1 Quick Tips"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"\ud83c\udfb5 Audio File Tips:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Use MP3 for music and voice (good compression)"}),"\n",(0,o.jsx)(n.li,{children:"Use WAV for short sound effects (no compression delay)"}),"\n",(0,o.jsx)(n.li,{children:"Keep file sizes reasonable for web loading"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"\ud83c\udf9b\ufe0f Channel Organization:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Channel 0: Background music/ambient"}),"\n",(0,o.jsx)(n.li,{children:"Channel 1: Sound effects/UI sounds"}),"\n",(0,o.jsx)(n.li,{children:"Channel 2: Voice/announcements"}),"\n",(0,o.jsx)(n.li,{children:"Add more channels as needed"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"\u26a1 Performance Tips:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Preload important audio files"}),"\n",(0,o.jsx)(n.li,{children:"Use volume ducking instead of stopping/starting"}),"\n",(0,o.jsx)(n.li,{children:"Monitor memory usage with many audio files"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Ready to build something amazing? Check out our ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"../getting-started/basic-usage",children:"real-world examples"})})," for inspiration! \ud83d\ude80"]})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>a});var i=r(6540);const o={},t=i.createContext(o);function s(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);
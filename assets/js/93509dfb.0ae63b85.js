"use strict";(self.webpackChunkaudio_queue_docs=self.webpackChunkaudio_queue_docs||[]).push([[307],{3357:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>t,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"api-reference/queue-management","title":"Queue Management","description":"Functions for managing audio queues - queueAudio, queueAudioPriority, and stop functions","source":"@site/docs/api-reference/queue-management.md","sourceDirName":"api-reference","slug":"/api-reference/queue-management","permalink":"/audio-queue-docs/api-reference/queue-management","draft":false,"unlisted":false,"editUrl":"https://github.com/tonycarpenter21/audio-queue-docs/tree/main/docs/api-reference/queue-management.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Queue Management","description":"Functions for managing audio queues - queueAudio, queueAudioPriority, and stop functions"},"sidebar":"tutorialSidebar","previous":{"title":"Performance & Memory Management","permalink":"/audio-queue-docs/core-concepts/performance-memory"},"next":{"title":"Volume Control","permalink":"/audio-queue-docs/api-reference/volume-control"}}');var a=r(4848),s=r(8453);const t={sidebar_position:1,title:"Queue Management",description:"Functions for managing audio queues - queueAudio, queueAudioPriority, and stop functions"},l="\ud83c\udfb5 Queue Management Functions",o={},u=[{value:"queueAudio()",id:"queueaudio",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Parameters",id:"parameters",level:3},{value:"AudioOptions",id:"audiooptions",level:3},{value:"Examples",id:"examples",level:3},{value:"Return Value",id:"return-value",level:3},{value:"queueAudioPriority()",id:"queueaudiopriority",level:2},{value:"Syntax",id:"syntax-1",level:3},{value:"Parameters",id:"parameters-1",level:3},{value:"Examples",id:"examples-1",level:3},{value:"stopCurrentAudioInChannel()",id:"stopcurrentaudioinchannel",level:2},{value:"Syntax",id:"syntax-2",level:3},{value:"Parameters",id:"parameters-2",level:3},{value:"Examples",id:"examples-2",level:3},{value:"Real-world Usage",id:"real-world-usage",level:3},{value:"stopAllAudioInChannel()",id:"stopallaudioinchannel",level:2},{value:"Syntax",id:"syntax-3",level:3},{value:"Parameters",id:"parameters-3",level:3},{value:"Examples",id:"examples-3",level:3},{value:"stopAllAudio()",id:"stopallaudio",level:2},{value:"Syntax",id:"syntax-4",level:3},{value:"Parameters",id:"parameters-4",level:3},{value:"Examples",id:"examples-4",level:3},{value:"\ud83c\udfae Real-World Usage Patterns",id:"-real-world-usage-patterns",level:2},{value:"Gaming Audio Manager",id:"gaming-audio-manager",level:3},{value:"Podcast App",id:"podcast-app",level:3},{value:"Interactive Presentation",id:"interactive-presentation",level:3},{value:"\ud83d\udd17 Related Functions",id:"-related-functions",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"-queue-management-functions",children:"\ud83c\udfb5 Queue Management Functions"})}),"\n",(0,a.jsx)(n.p,{children:"This section covers all functions related to managing audio queues - adding audio, priority queuing, and stopping playback."}),"\n",(0,a.jsx)(n.h2,{id:"queueaudio",children:"queueAudio()"}),"\n",(0,a.jsx)(n.p,{children:"Add an audio file to the end of a queue and start playing it automatically."}),"\n",(0,a.jsx)(n.h3,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"queueAudio(audioFile: string, channelNumber?: number, options?: AudioOptions): Promise<void>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Type"}),(0,a.jsx)(n.th,{children:"Default"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"audioFile"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"string"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Required"})}),(0,a.jsx)(n.td,{children:"Path or URL to the audio file"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"channelNumber"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"number"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"0"})}),(0,a.jsx)(n.td,{children:"Channel number (0, 1, 2, etc.)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"options"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"AudioOptions"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"{}"})}),(0,a.jsx)(n.td,{children:"Configuration options"})]})]})]}),"\n",(0,a.jsx)(n.h3,{id:"audiooptions",children:"AudioOptions"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"interface AudioOptions {\r\n  loop?: boolean;     // Loop the audio when it finishes\r\n  volume?: number;    // Initial volume (0-1 range)\r\n  priority?: boolean; // Same as queueAudioPriority if true\r\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Basic Usage"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { queueAudio } from 'audio-channel-queue';\r\n\r\n// Play on default channel (0)\r\nawait queueAudio('./sounds/welcome.mp3');\r\n\r\n// Play on specific channel\r\nawait queueAudio('./music/background.mp3', 1);\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"With Options"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"// Background music with loop and volume\r\nawait queueAudio('./music/ambient.mp3', 0, {\r\n  loop: true,\r\n  volume: 0.3\r\n});\r\n\r\n// Sound effect at full volume\r\nawait queueAudio('./sfx/explosion.wav', 1, {\r\n  volume: 1.0\r\n});\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Multiple Files in Queue"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"// Queue multiple songs - they'll play in order\r\nawait queueAudio('./music/song1.mp3', 0);\r\nawait queueAudio('./music/song2.mp3', 0);\r\nawait queueAudio('./music/song3.mp3', 0);\n"})}),"\n",(0,a.jsx)(n.h3,{id:"return-value",children:"Return Value"}),"\n",(0,a.jsxs)(n.p,{children:["Returns a ",(0,a.jsx)(n.code,{children:"Promise<void>"})," that resolves when the audio has been successfully added to the queue."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"queueaudiopriority",children:"queueAudioPriority()"}),"\n",(0,a.jsxs)(n.p,{children:["Add an audio file to the ",(0,a.jsx)(n.strong,{children:"front"})," of the queue (plays after current audio finishes). Perfect for urgent announcements!"]}),"\n",(0,a.jsx)(n.h3,{id:"syntax-1",children:"Syntax"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"queueAudioPriority(audioFile: string, channelNumber?: number, options?: AudioOptions): Promise<void>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,a.jsxs)(n.p,{children:["Same as ",(0,a.jsx)(n.code,{children:"queueAudio()"})," - the only difference is queue position."]}),"\n",(0,a.jsx)(n.h3,{id:"examples-1",children:"Examples"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Urgent Announcements"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"// Queue some background music\r\nawait queueAudio('./music/song1.mp3', 0);\r\nawait queueAudio('./music/song2.mp3', 0);\r\nawait queueAudio('./music/song3.mp3', 0);\r\n\r\n// Emergency announcement - plays immediately!\r\nawait queueAudioPriority('./voice/emergency.mp3', 0);\r\n// Stop the current sound so the priority announcement plays near immediately\r\nstopCurrentAudioInChannel(); // Note: defaults to channel 0\r\n\r\n// The emergency message now plays right away instead of waiting\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Gaming Example"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"// Background music playing\r\nawait queueAudio('./music/level-theme.mp3', 0, { loop: true });\r\n\r\n// Boss appears - urgent battle music needs to start now!\r\nawait queueAudioPriority('./music/boss-battle.mp3', 0);\r\nstopCurrentAudioInChannel(); // Immediately stop level theme, start boss music\r\n\r\n// Boss music plays instantly instead of waiting for level theme to finish\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"stopcurrentaudioinchannel",children:"stopCurrentAudioInChannel()"}),"\n",(0,a.jsx)(n.p,{children:"Stop the currently playing audio in a specific channel and automatically start the next queued item."}),"\n",(0,a.jsx)(n.h3,{id:"syntax-2",children:"Syntax"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"stopCurrentAudioInChannel(channelNumber?: number): void\n"})}),"\n",(0,a.jsx)(n.h3,{id:"parameters-2",children:"Parameters"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Type"}),(0,a.jsx)(n.th,{children:"Default"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsx)(n.tbody,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"channelNumber"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"number"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"0"})}),(0,a.jsx)(n.td,{children:"Channel to stop current audio"})]})})]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Note:"})," ",(0,a.jsx)(n.code,{children:"channelNumber"})," is optional and defaults to ",(0,a.jsx)(n.code,{children:"0"}),". Functions like ",(0,a.jsx)(n.code,{children:"stopCurrentAudioInChannel()"}),", ",(0,a.jsx)(n.code,{children:"stopAllAudioInChannel()"}),", and several others use channel 0 by default when no channel is specified."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"examples-2",children:"Examples"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { stopCurrentAudioInChannel } from 'audio-channel-queue';\r\n\r\n// Skip to next song on default channel (0)\r\nstopCurrentAudioInChannel();\r\n\r\n// Skip to next song on specific channel\r\nstopCurrentAudioInChannel(1);\r\n\r\n// Gaming example - immediate audio switching\r\nfunction handleBossFight(): void {\r\n  // Stop current background music and play boss theme\r\n  stopCurrentAudioInChannel(); // Skip current song\r\n  queueAudioPriority('./music/boss-theme.mp3');\r\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"real-world-usage",children:"Real-world Usage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"class MusicPlayer {\r\n  private currentChannel: number = 0;\r\n\r\n  skipToNext(): void {\r\n    console.log('Skipping to next track...');\r\n    if (this.currentChannel === 0) {\r\n      stopCurrentAudioInChannel(); // Use default for channel 0\r\n    } else {\r\n      stopCurrentAudioInChannel(this.currentChannel);\r\n    }\r\n  }\r\n\r\n  skipToPrevious(): void {\r\n    // In a real app, you'd track the previous song\r\n    console.log('Going to previous track...');\r\n    if (this.currentChannel === 0) {\r\n      stopCurrentAudioInChannel();\r\n    } else {\r\n      stopCurrentAudioInChannel(this.currentChannel);\r\n    }\r\n    // Then queue the previous song with priority\r\n  }\r\n\r\n  emergencyStop(): void {\r\n    // Stop whatever is playing immediately\r\n    if (this.currentChannel === 0) {\r\n      stopCurrentAudioInChannel();\r\n    } else {\r\n      stopCurrentAudioInChannel(this.currentChannel);\r\n    }\r\n  }\r\n}\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"stopallaudioinchannel",children:"stopAllAudioInChannel()"}),"\n",(0,a.jsx)(n.p,{children:"Stop the current audio and clear all queued items in a specific channel."}),"\n",(0,a.jsx)(n.h3,{id:"syntax-3",children:"Syntax"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"stopAllAudioInChannel(channelNumber?: number): void\n"})}),"\n",(0,a.jsx)(n.h3,{id:"parameters-3",children:"Parameters"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Type"}),(0,a.jsx)(n.th,{children:"Default"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsx)(n.tbody,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"channelNumber"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"number"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"0"})}),(0,a.jsx)(n.td,{children:"Channel to clear completely"})]})})]}),"\n",(0,a.jsx)(n.h3,{id:"examples-3",children:"Examples"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"// Queue multiple items\r\nawait queueAudio('./music/song1.mp3', 0);\r\nawait queueAudio('./music/song2.mp3', 0);\r\nawait queueAudio('./music/song3.mp3', 0);\r\n\r\n// Stop everything on channel 0\r\nstopAllAudioInChannel(0);\r\n\r\n// Channel 0 is now silent and empty\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Emergency Stop Button"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"function createEmergencyStopButton() {\r\n  const button = document.createElement('button');\r\n  button.textContent = '\ud83d\uded1 Emergency Stop';\r\n  button.onclick = () => {\r\n    stopAllAudioInChannel(0); // Clear background music\r\n    stopAllAudioInChannel(1); // Clear sound effects\r\n  };\r\n  return button;\r\n}\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"stopallaudio",children:"stopAllAudio()"}),"\n",(0,a.jsx)(n.p,{children:"Stop all audio across all channels. Nuclear option!"}),"\n",(0,a.jsx)(n.h3,{id:"syntax-4",children:"Syntax"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"stopAllAudio(): void\n"})}),"\n",(0,a.jsx)(n.h3,{id:"parameters-4",children:"Parameters"}),"\n",(0,a.jsx)(n.p,{children:"None."}),"\n",(0,a.jsx)(n.h3,{id:"examples-4",children:"Examples"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"// Start audio on multiple channels\r\nawait queueAudio('./music/background.mp3', 0);\r\nawait queueAudio('./sfx/ambient.wav', 1);\r\nawait queueAudio('./voice/narrator.mp3', 2);\r\n\r\n// Stop everything everywhere\r\nstopAllAudio();\r\n\r\n// All channels are now silent\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Global Mute Implementation"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"let isMuted = false;\r\n\r\nfunction toggleGlobalMute() {\r\n  if (isMuted) {\r\n    // Resume all channels\r\n    resumeAllChannels();\r\n    isMuted = false;\r\n  } else {\r\n    // Stop all audio\r\n    stopAllAudio();\r\n    isMuted = true;\r\n  }\r\n}\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-real-world-usage-patterns",children:"\ud83c\udfae Real-World Usage Patterns"}),"\n",(0,a.jsx)(n.h3,{id:"gaming-audio-manager",children:"Gaming Audio Manager"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"class GameAudioManager {\r\n  constructor() {\r\n    // Set up channels\r\n    // 0: Background music\r\n    // 1: Sound effects\r\n    // 2: Voice/announcements\r\n  }\r\n\r\n  async startLevel(levelNumber: number) {\r\n    // Stop previous level music\r\n    stopAllAudioInChannel(0);\r\n    \r\n    // Start new level music\r\n    await queueAudio(`./music/level-${levelNumber}.mp3`, 0, {\r\n      loop: true,\r\n      volume: 0.4\r\n    });\r\n  }\r\n\r\n  async playEffect(effectName: string) {\r\n    await queueAudio(`./sfx/${effectName}.wav`, 1);\r\n  }\r\n\r\n  async playAnnouncement(message: string) {\r\n    // Priority announcement that interrupts music briefly\r\n    await queueAudioPriority(`./voice/${message}.mp3`, 0);\r\n  }\r\n\r\n  gameOver() {\r\n    // Stop everything and play game over music\r\n    stopAllAudio();\r\n    queueAudio('./music/game-over.mp3', 0);\r\n  }\r\n}\r\n\r\n// Usage\r\nconst audioManager = new GameAudioManager();\r\nawait audioManager.startLevel(1);\r\nawait audioManager.playEffect('jump');\r\nawait audioManager.playAnnouncement('checkpoint');\n"})}),"\n",(0,a.jsx)(n.h3,{id:"podcast-app",children:"Podcast App"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"class PodcastPlayer {\r\n  async loadEpisode(episodeUrl: string) {\r\n    // Clear any previous episode\r\n    stopAllAudioInChannel(0);\r\n    \r\n    // Load new episode\r\n    await queueAudio(episodeUrl, 0);\r\n  }\r\n\r\n  async insertAd(adUrl: string) {\r\n    // Insert ad to play next (priority)\r\n    await queueAudioPriority(adUrl, 0);\r\n  }\r\n\r\n  skipCurrent() {\r\n    // Skip current segment (ad or chapter)\r\n    stopCurrentAudioInChannel(0);\r\n  }\r\n\r\n  stopEpisode() {\r\n    // Stop and clear episode\r\n    stopAllAudioInChannel(0);\r\n  }\r\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"interactive-presentation",children:"Interactive Presentation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"class PresentationAudio {\r\n  async startPresentation() {\r\n    // Background ambient sound\r\n    await queueAudio('./ambient/office.mp3', 1, {\r\n      loop: true,\r\n      volume: 0.1\r\n    });\r\n  }\r\n\r\n  async playSlideNarration(slideNumber: number) {\r\n    // Stop previous narration, start new one\r\n    stopAllAudioInChannel(0);\r\n    await queueAudio(`./narration/slide-${slideNumber}.mp3`, 0);\r\n  }\r\n\r\n  async playTransitionSound() {\r\n    // Quick transition effect\r\n    await queueAudio('./sfx/slide-transition.wav', 2);\r\n  }\r\n\r\n  endPresentation() {\r\n    // Fade out and stop\r\n    stopAllAudio();\r\n  }\r\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"-related-functions",children:"\ud83d\udd17 Related Functions"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"./volume-control",children:"Volume Control"})})," - Control playback volume"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"./pause-resume",children:"Pause/Resume"})})," - Pause and resume playback"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"./event-listeners",children:"Event Listeners"})})," - Monitor queue changes"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"./audio-information",children:"Audio Information"})})," - Get queue status"]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Next:"})," Learn about ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"./volume-control",children:"Volume Control"})})," functions \u2192"]})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>l});var i=r(6540);const a={},s=i.createContext(a);function t(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);